-- **************************** SqlDBM: Snowflake ***************************
-- * Generated by SqlDBM: AdWorks project, v578 vs test by serge@sqldbm.com *

ALTER TABLE IF EXISTS EDW.DimCustomer
    DROP CONSTRAINT FK_DimCustomer_401;

ALTER TABLE IF EXISTS EDW.DimReseller
    DROP CONSTRAINT FK_DimReseller_411;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    DROP CONSTRAINT FK_FactCurrencyRate_413;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    DROP CONSTRAINT FK_FactCurrencyRate_415;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_417;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_419;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_421;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_423;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_425;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_427;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_429;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_431;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_433;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_435;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_437;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_439;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_441;

ALTER TABLE IF EXISTS EDW.FactSalesQuota
    DROP CONSTRAINT FK_FactSalesQuota_463;

ALTER TABLE IF EXISTS EDW.FactSurveyResponse
    DROP CONSTRAINT FK_FactSurveyResponse_465;

ALTER TABLE IF EXISTS EDW.FactSurveyResponse
    DROP CONSTRAINT FK_FactSurveyResponse_467;

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    DROP CONSTRAINT FK_NewFactCurrencyRate_469;

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    DROP CONSTRAINT FK_NewFactCurrencyRate_471;

ALTER TABLE IF EXISTS EDW.DimCurrency
    DROP CONSTRAINT PK_DimCurrency;

ALTER TABLE IF EXISTS EDW.DimCustomer
    DROP CONSTRAINT PK_DimCustomer;

ALTER TABLE IF EXISTS EDW.DimDate
    DROP CONSTRAINT PK_DimDate;

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    DROP CONSTRAINT PK_DimDepartmentGroup;

ALTER TABLE IF EXISTS EDW.DimGeography
    DROP CONSTRAINT PK_DimGeography;

ALTER TABLE IF EXISTS EDW.DimOrganization
    DROP CONSTRAINT PK_DimOrganization;

ALTER TABLE IF EXISTS EDW.DimProductCategory
    DROP CONSTRAINT PK_DimProductCategory;

ALTER TABLE IF EXISTS EDW.DimPromotion
    DROP CONSTRAINT PK_DimPromotion;

ALTER TABLE IF EXISTS EDW.DimReseller
    DROP CONSTRAINT PK_DimReseller;

ALTER TABLE IF EXISTS EDW.DimSalesTerritory
    DROP CONSTRAINT PK_DimSalesTerritory;

ALTER TABLE IF EXISTS EDW.DimScenario
    DROP CONSTRAINT PK_DimScenario;

DROP TABLE IF EXISTS EDW.FactResellerSales;

DROP TABLE IF EXISTS EDW.DimProduct;

DROP TABLE IF EXISTS EDW.FactProductInventory;

DROP TABLE IF EXISTS EDW.DimProductSubcategory;

DROP TABLE IF EXISTS EDW.DimEmployee;

DROP TABLE IF EXISTS EDW.DimAccount;

CREATE SCHEMA IF NOT EXISTS AdventureworksdwEdw;

CREATE SCHEMA IF NOT EXISTS Hotelbnb;

DROP SCHEMA IF EXISTS "ADVENTUREWORKSDW.EDW";

CREATE FILE FORMAT IF NOT EXISTS AdventureworksdwHotelbnbCsvWHeader
    TYPE = CSV
    SKIP_HEADER = 1
    ESCAPE = '|'
    ESCAPE_UNENCLOSED_FIELD = '|'
    FIELD_OPTIONALLY_ENCLOSED_BY = '\"';

DROP FILE FORMAT IF EXISTS "ADVENTUREWORKSDW.EDW.FILEFORMAT_431";

CREATE SEQUENCE IF NOT EXISTS Edw.Seq_Demo123
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS Seq_SeqItem
START WITH 1
INCREMENT BY 1;

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN CustomerKey COMMENT 'Customer Identifier loaded from salesforce';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN FirstName COMMENT 'english format';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN NameStyle COMMENT 'First or last name';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN BirthDate COMMENT 'remember to flag as PII';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN NumberChildrenAtHome COMMENT 'hopefully none';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN Phone COMMENT 'area code and phone';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN DateFirstPurchase COMMENT 'when first purchased and not returned';

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ALTER COLUMN DepartmentGroupKey COMMENT 'Org hierarchy from salesforce';

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ALTER COLUMN ParentDepartmentGroupKey SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ALTER COLUMN DepartmentGroupName SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimGeography
    ALTER COLUMN StateProvinceCode COMMENT 'iso state code';

ALTER TABLE IF EXISTS EDW.DimGeography
    ADD COLUMN LowercaseCol integer NOT NULL;

ALTER TABLE IF EXISTS EDW.DimOrganization
    ALTER COLUMN OrganizationKey COMMENT 'org key from HR , format xyz_nnnnn';

ALTER TABLE IF EXISTS EDW.DimOrganization
    ALTER COLUMN ParentOrganizationKey COMMENT 'parent org';

ALTER TABLE IF EXISTS EDW.DimPromotion
    ADD COLUMN NewCol varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.DimPromotion
    ADD COLUMN NewCol1 integer NOT NULL;

ALTER TABLE IF EXISTS EDW.DimReseller
    ALTER COLUMN GeographyKey SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimReseller
    ALTER COLUMN NumberEmployees COMMENT 'total emps in reseller location';

ALTER TABLE IF EXISTS EDW.DimSalesTerritory
    ALTER COLUMN SalesTerritoryGroup SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimScenario
    ADD COLUMN ParentPk varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    ADD COLUMN NewCol integer NOT NULL;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    ADD COLUMN LowerCase boolean NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ALTER COLUMN FinanceKey DROP NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN DayNumberOfYear number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN NewCol varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN EnglishDayNameOfWeek varchar(10) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN EnglishMonthName varchar(10) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN FiscalQuarter number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN NewCol1 varchar(40);

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN ParentPk varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN ParentPk1 varchar NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ALTER COLUMN UnitPriceDiscountPct DROP NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP COLUMN ProductKey;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP COLUMN RevisionNumber;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP COLUMN TaxAmt;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN RevisionNumberasdf number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN Taxamount number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewPk varchar NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewPk integer NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewPk1 varchar NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewCol1 bigint NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN Col1747 bigint NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN SalesTerritoryGroup varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    ADD COLUMN LowerCol integer NOT NULL;

ALTER TABLE IF EXISTS Edw.DimCurrency
    ADD CONSTRAINT PK_DimCurrency_CurrencyKey_PkDimCurrency PRIMARY KEY (CurrencyKey);

ALTER TABLE IF EXISTS Edw.DimCustomer
    ADD CONSTRAINT PK_DimCustomer_CustomerKey_PkDimCustomer PRIMARY KEY (CustomerKey);

ALTER TABLE IF EXISTS Edw.DimDate
    ADD CONSTRAINT PK_DimDate_DateKey_PkDimDate PRIMARY KEY (DateKey);

ALTER TABLE IF EXISTS Edw.DimDepartmentGroup
    ADD CONSTRAINT PK_DimDepartmentGroup_DepartmentGroupKey_PkDimDepartmentGroup PRIMARY KEY (DepartmentGroupKey);

ALTER TABLE IF EXISTS Edw.DimDepartmentGroup
    ADD CONSTRAINT AK_DimDepartmentGroup_Ak1745 UNIQUE (DepartmentGroupName, ParentDepartmentGroupKey);

ALTER TABLE IF EXISTS Edw.DimGeography
    ADD CONSTRAINT PK_DimGeography_GeographyKey_PkDimGeography PRIMARY KEY (GeographyKey);

ALTER TABLE IF EXISTS Edw.DimOrganization
    ADD CONSTRAINT PK_DimOrganization_OrganizationKey_PkDimOrganization PRIMARY KEY (OrganizationKey);

ALTER TABLE IF EXISTS Edw.DimProductCategory
    ADD CONSTRAINT PK_DimProductCategory_ProductCategoryKey_PkDimProductCategory PRIMARY KEY (ProductCategoryKey);

ALTER TABLE IF EXISTS Edw.DimPromotion
    ADD CONSTRAINT PK_DimPromotion_PromotionKey_PkDimPromotion PRIMARY KEY (PromotionKey);

ALTER TABLE IF EXISTS Edw.DimReseller
    ADD CONSTRAINT PK_DimReseller_ResellerKey_PkDimReseller PRIMARY KEY (ResellerKey);

ALTER TABLE IF EXISTS Edw.DimSalesTerritory
    ADD CONSTRAINT PK_DimSalesTerritory_SalesTerritoryGroup_SalesTerritoryKey_PkDimSalesTerritory PRIMARY KEY (SalesTerritoryKey, SalesTerritoryGroup);

ALTER TABLE IF EXISTS Edw.DimScenario
    ADD CONSTRAINT PK_DimScenario_ParentPk_ScenarioKey_PkDimScenario PRIMARY KEY (ScenarioKey, ParentPk);

ALTER TABLE IF EXISTS Edw.FactCurrencyRate
    ADD CONSTRAINT PK_FactCurrencyRate_CurrencyKey_PkFactCurrencyRate1797 PRIMARY KEY (CurrencyKey);

CREATE TABLE IF NOT EXISTS Test
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table719
(
 NewTablePk  varchar NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table719_NewTablePk_Pk730 PRIMARY KEY ( NewTablePk )
);

CREATE TABLE IF NOT EXISTS Table548
(
 NewPk varchar NOT NULL,
 CONSTRAINT PK_Table548_NewPk_Pk551 PRIMARY KEY ( NewPk )
);

CREATE TABLE IF NOT EXISTS Table544Copy11Copy1
(
 SalesOrderNumber      varchar(20) NOT NULL,
 UnitPrice             number(38,0) NOT NULL,
 UnitPrice1            number(38,0) NOT NULL,
 ExtendedAmount1       number(38,0) NOT NULL,
 UnitPriceDiscountPct1 float,
 ExtendedAmount        number(38,0) NOT NULL,
 UnitPriceDiscountPct  float,
 NewCol123             date NOT NULL
);

CREATE TABLE IF NOT EXISTS Table544Copy11
(
 UnitPrice1            number(38,0) NOT NULL,
 ExtendedAmount1       number(38,0) NOT NULL,
 UnitPriceDiscountPct1 float,
 SalesOrderNumber      varchar(20) NOT NULL,
 NewCol123             date NOT NULL
);

CREATE TABLE IF NOT EXISTS Table544Copy1
(
 SalesOrderNumber     varchar(20) NOT NULL,
 UnitPrice            number(38,0) NOT NULL,
 ExtendedAmount       number(38,0) NOT NULL,
 UnitPriceDiscountPct float
);

CREATE TABLE IF NOT EXISTS Table3440
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table3411
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar
);

CREATE TABLE IF NOT EXISTS Table3399
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Name        varcharasdf NOT NULL
);

CREATE TABLE IF NOT EXISTS Table3388
(
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table3382
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table3379
(
 MyPk        varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table3379_MyPk_3395 PRIMARY KEY ( MyPk )
);

CREATE TABLE IF NOT EXISTS Table3348
(
 ParentPk    varchar NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table3348_ParentPk_3360 PRIMARY KEY ( ParentPk )
);

CREATE TABLE IF NOT EXISTS Table3343
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table3339
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table3335
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table3326
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table3321
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table3317
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table3294
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table3287
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table3264
(
 ParentPk    varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table3264_ParentPk_3275 PRIMARY KEY ( ParentPk )
);

CREATE TABLE IF NOT EXISTS Table3249
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table2549
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar
);

CREATE TABLE IF NOT EXISTS Table2533
(
 NewPk       varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table2533_NewPk_2545 PRIMARY KEY ( NewPk )
);

CREATE TABLE IF NOT EXISTS Table2525
(
 NewPk        NOT NULL,
 NewPk2      integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol       NOT NULL,
 CONSTRAINT PK_Table2525_NewPk_NewPk2_2529 PRIMARY KEY ( NewPk, NewPk2 )
);

CREATE TABLE IF NOT EXISTS Table2514
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar
);

CREATE TABLE IF NOT EXISTS Table2494
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar, 
 Lowercase      integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Table2486
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table2469
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol      integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Table2464
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar
);

CREATE TABLE IF NOT EXISTS Table2458
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2451
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar, 
 UpperCase      varchar NOT NULL,
 LowerCase      varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS Table2448
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar
);

CREATE TABLE IF NOT EXISTS Table2407
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar
);

CREATE TABLE IF NOT EXISTS Table2392
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2375
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table2370
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2345
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2327
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table2323
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2319
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2296
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2292
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2241Copy1
(
 PrimaryPk   integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table2241Copy1_PrimaryPk_PkTable2241PrimaryPk2246 PRIMARY KEY ( PrimaryPk )
);

CREATE TABLE IF NOT EXISTS Table2241
(
 PrimaryPk   integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table2241_PrimaryPk_2246 PRIMARY KEY ( PrimaryPk )
);

CREATE TABLE IF NOT EXISTS Table2235
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2230
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2222
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
)
CLUSTER BY ( EtlId, EtlFilename );

CREATE TABLE IF NOT EXISTS Table2219
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2202
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Lowercase    NOT NULL
);

CREATE TABLE IF NOT EXISTS Table2167
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2164
(
 EtlId       date NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2160
(

);

CREATE TABLE IF NOT EXISTS Table2091
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2088
(
 EtlId       integer NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2079
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2070
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2065
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1976
(
 EtlId       date NOT NULL COMMENT 'hello desc',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table1937
(
 SomePk       NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Name        varchar(50) NOT NULL,
 CONSTRAINT PK_Table1937_SomePk_1941 PRIMARY KEY ( SomePk )
)
COMMENT = 'future port table';

CREATE TABLE IF NOT EXISTS Table1934
(
 EtlId       date NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table1900
(
 NewCol       NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table1900_NewCol_1904 PRIMARY KEY ( NewCol )
);

CREATE TABLE IF NOT EXISTS Table1828
(
 EtlId                          date NOT NULL COMMENT 'hello desc', 
 EtlFilename                    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ProductSubcategoryAlternateKey number(38,0),
 EnglishProductSubcategoryName  varchar(50) NOT NULL,
 FrenchProductSubcategoryName   varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Table1825
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1820
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1794
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1791
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1765
(
 EtlId       date NOT NULL,
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table1558Copy1
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Ship
(
 ShipId      integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Ship_ShipId_2213 PRIMARY KEY ( ShipId )
);

CREATE TABLE IF NOT EXISTS Edw.ResellerSalesAnalysis
(
 StoreSizeCategory     varchar(1) NOT NULL,
 EmployeeTitle         varchar(50) NOT NULL,
 SalesOrderNumber      varchar(20) NOT NULL,
 CarrierTrackingNumber varchar(25),
 SalesOrderLineNumber  number(38,0) NOT NULL,
 RevisionNumber        number(38,0) COMMENT 'from CRM system',
 OrderQuantity         number(38,0),
 UnitPrice             number(38,0),
 ExtendedAmount        number(38,0),
 UnitPriceDiscountPct  float,
 DiscountAmount        float,
 ProductStandardCost   number(38,0),
 TotalProductCost      number(38,0),
 SalesAmount           number(38,0),
 CustomerPoNumber      varchar(25)
)
COMMENT = 'Fact data of Reseller Sales';

CREATE TABLE IF NOT EXISTS ProductType
(
 ProductTypeId int NOT NULL,
 EtlId         date NOT NULL COMMENT 'hello desc', 
 EtlFilename   varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ProductName   varchar NOT NULL,
 CONSTRAINT PK_ProductType_ProductTypeId_3424 PRIMARY KEY ( ProductTypeId )
);

CREATE TABLE IF NOT EXISTS NewTblCopy1
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 TestCol     asdve NOT NULL,
 Lowercase   integer NOT NULL
);

CREATE TABLE IF NOT EXISTS NewTbl
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol      integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Edw.NewTable
(
 NewPk       integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_NewTable_NewPk_2506 PRIMARY KEY ( NewPk )
);

CREATE TABLE IF NOT EXISTS NewDimEmp
(

);

CREATE TABLE IF NOT EXISTS Hotelbnb.Hotels
(
 CityCode varchar(3),
 HotelId  number(38,0)
);

CREATE TABLE IF NOT EXISTS Gym
(
 GymId       integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 GymName     varchar(50) NOT NULL,
 CONSTRAINT PK_Gym_GymId_2764 PRIMARY KEY ( GymId )
);

CREATE TABLE IF NOT EXISTS FctClientSalesCopy1
(
 CliSalesSkey varchar(50) NOT NULL,
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SalesAmount  float NOT NULL,
 ClientId     integer NOT NULL,
 CONSTRAINT PK_FctClientSalesCopy1_CliSalesSkey_PkFctClientSalesCliSalesSkey1759 PRIMARY KEY ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS FctClientSales
(
 CliSalesSkey varchar(50) NOT NULL,
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SalesAmount  float NOT NULL COMMENT 'amt in euros',
 ClientId     integer NOT NULL,
 Test         integer NOT NULL,
 CONSTRAINT PK_FctClientSales_CliSalesSkey_1759 PRIMARY KEY ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS DimShip
(
 ShipId      varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Name         NOT NULL,
 CONSTRAINT PK_DimShip_ShipId_2391 PRIMARY KEY ( ShipId )
);

CREATE TABLE IF NOT EXISTS Edw.DimPromotionCopy1
(
 PromotionKey             number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1,
 PromotionAlternateKey    number(38,0),
 EnglishPromotionName     varchar(255),
 SpanishPromotionName     varchar(255),
 FrenchPromotionName      varchar(255),
 DiscountPct              float,
 EnglishPromotionType     varchar(50),
 SpanishPromotionType     varchar(50),
 FrenchPromotionType      varchar(50),
 EnglishPromotionCategory varchar(50),
 SpanishPromotionCategory varchar(50),
 FrenchPromotionCategory  varchar(50),
 MinQty                   number(38,0),
 MaxQty                   number(38,0),
 NewCol                   varchar(50) NOT NULL,
 CONSTRAINT PK_DimPromotionCopy1_PromotionKey_PkDimPromotionPromotionKeyPkDimPromotion PRIMARY KEY ( PromotionKey )
);

CREATE TABLE IF NOT EXISTS DimProduct
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Edw.DimGeographyCopy1
(
 GeographyKey             number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1,
 City                     varchar(30),
 StateProvinceCode        varchar(3),
 StateProvinceName        varchar(50),
 CountryRegionCode        varchar(3),
 EnglishCountryRegionName varchar(50),
 SpanishCountryRegionName varchar(50),
 FrenchCountryRegionName  varchar(50),
 PostalCode               varchar(15),
 SalesTerritoryKey        number(38,0),
 IpaddressLocator         varchar(15),
 CONSTRAINT PK_DimGeographyCopy1_GeographyKey_PkDimGeographyGeographyKeyPkDimGeography PRIMARY KEY ( GeographyKey )
);

CREATE TABLE IF NOT EXISTS DimCust
(
 CustId       NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_DimCust_CustId_2288 PRIMARY KEY ( CustId )
);

CREATE TABLE IF NOT EXISTS DimClientHistCopy1
(
 ClientId    integer NOT NULL,
 ValidFrom   date NOT NULL,
 ValidTo     date NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ClientName  varchar NOT NULL,
 NewCol      integer NOT NULL,
 Test        integer NOT NULL,
 CONSTRAINT PK_DimClientHistCopy1_ClientId_ValidFrom_ValidTo_PkDimClientHistClientIdValidFromValidTo1807 PRIMARY KEY ( ClientId, ValidFrom, ValidTo ),
 CONSTRAINT AK_DimClientHistCopy1_AkSingleCli UNIQUE ( ClientId )
);

CREATE TABLE IF NOT EXISTS Hotelbnb.Destinations
(
 DestinationId              varchar(3) NOT NULL COMMENT 'ISO country code',
 DestinationName            varchar(1000),
 CityCode                   varchar(3) COMMENT 'iso city id',
 CountryCode                varchar(3),
 CountryName                varchar(1000),
 CommercialFinanceRegion    varchar(1000),
 CommercialFinanceSubregion varchar(1000),
 HotelDestRegion            varchar(1000),
 HotelDestSubregion         varchar(1000),
 HotelDestSubregion2        varchar(1000),
 BtbSoRegion                varchar(1000),
 BtbSoSubregion             varchar(1000),
 CONSTRAINT PK_Destinations_DestinationId_DestinationsPk PRIMARY KEY ( DestinationId )
);

CREATE TABLE IF NOT EXISTS Hotelbnb.Bookings
(
 BookingId    varchar(12) COMMENT 'comes from main booking system',
 HotelId      number(38,0),
 Rn           number(38,0) COMMENT 'room nights',
 CreationDate varchar(10)
);

CREATE TABLE IF NOT EXISTS Table3534
(
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Fsdgsg       varchar(50) NOT NULL,
 TestRightNow  NOT NULL,
 NewCol       varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS Table3402
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Name        varchar NOT NULL,
 FirstName   varchar(50) NOT NULL,
 NewCol       NOT NULL
);

CREATE TABLE IF NOT EXISTS Table3372
(
 MyPk           varchar(50) NOT NULL,
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar, 
 NewCol         integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Table2476
(
 EtlId          date NOT NULL COMMENT 'hello desc',
 NewPk          varchar(50) NOT NULL,
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar, 
 TestCol        asdve NOT NULL,
 CONSTRAINT PK_Table2476_EtlId_NewPk_PkTable24762531 PRIMARY KEY ( EtlId, NewPk ),
 CONSTRAINT Fk2536 FOREIGN KEY ( NewPk ) REFERENCES Table2533 ( NewPk )
);

CREATE TABLE IF NOT EXISTS Table1943
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SomePk       NOT NULL,
 CONSTRAINT Fk1946 FOREIGN KEY ( SomePk ) REFERENCES Table1937 ( SomePk )
);

CREATE TABLE IF NOT EXISTS Table1905
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol       NOT NULL,
 CONSTRAINT Fk1908 FOREIGN KEY ( NewCol ) REFERENCES Table1900 ( NewCol )
);

CREATE TABLE IF NOT EXISTS Table1828Copy1Copy1
(
 PrimaryPk                       integer NOT NULL,
 EtlId                           date NOT NULL COMMENT 'hello desc', 
 EtlFilename                     varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ProductCategoryKey1             number(38,0) NOT NULL,
 ProductCategoryKey              number(38,0) NOT NULL,
 ProductSubcategoryAlternateKey  number(38,0),
 ProductSubcategoryAlternateKey1 number(38,0),
 EnglishProductSubcategoryName1  varchar(50) NOT NULL,
 EnglishProductSubcategoryName   varchar(50) NOT NULL,
 FrenchProductSubcategoryName    varchar(50) NOT NULL,
 CONSTRAINT PK_Table1828Copy1Copy1_PrimaryPk_2253 PRIMARY KEY ( PrimaryPk ),
 CONSTRAINT Fk2244Copy1 FOREIGN KEY ( PrimaryPk ) REFERENCES Table2241Copy1 ( PrimaryPk )
);

CREATE TABLE IF NOT EXISTS Table1828Copy1
(
 PrimaryPk                       integer NOT NULL,
 EtlId                           date NOT NULL COMMENT 'hello desc', 
 EtlFilename                     varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ProductSubcategoryAlternateKey  number(38,0),
 ProductSubcategoryAlternateKey1 number(38,0),
 EnglishProductSubcategoryName1  varchar(50) NOT NULL,
 EnglishProductSubcategoryName   varchar(50) NOT NULL,
 FrenchProductSubcategoryName    varchar(50) NOT NULL,
 CONSTRAINT PK_Table1828Copy1_PrimaryPk_PkTable1828Copy12253 PRIMARY KEY ( PrimaryPk ),
 CONSTRAINT Fk2244 FOREIGN KEY ( PrimaryPk ) REFERENCES Table2241 ( PrimaryPk )
);

CREATE TABLE IF NOT EXISTS ProdctSubtype
(
 ProductTypeId    int NOT NULL,
 ProductSubtypeId int NOT NULL,
 EtlId            date NOT NULL COMMENT 'hello desc', 
 EtlFilename      varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Name             varchar NOT NULL,
 CONSTRAINT PK_ProdctSubtype_ProductSubtypeId_ProductTypeId_3436 PRIMARY KEY ( ProductTypeId, ProductSubtypeId ),
 CONSTRAINT Fk3433 FOREIGN KEY ( ProductTypeId ) REFERENCES ProductType ( ProductTypeId )
);

CREATE TABLE IF NOT EXISTS Port
(
 PortId      varchar(50) NOT NULL,
 ShipId      integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Port_PortId_ShipId_2713 PRIMARY KEY ( PortId, ShipId ),
 CONSTRAINT Fk2214 FOREIGN KEY ( ShipId ) REFERENCES Ship ( ShipId )
);

CREATE TABLE IF NOT EXISTS NewChildCopy1
(
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CliSalesSkey varchar(50) NOT NULL,
 CONSTRAINT Fk1802Copy1 FOREIGN KEY ( CliSalesSkey ) REFERENCES FctClientSalesCopy1 ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS NewChild
(
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CliSalesSkey varchar(50) NOT NULL,
 CONSTRAINT Fk1802 FOREIGN KEY ( CliSalesSkey ) REFERENCES FctClientSales ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS LockerInGym
(
 LockerId    int NOT NULL,
 GymId       integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_LockerInGym_GymId_LockerId_PkLockerInGymGymIdLockerId2805 PRIMARY KEY ( LockerId, GymId ),
 CONSTRAINT Fk2810 FOREIGN KEY ( GymId ) REFERENCES Gym ( GymId )
);

CREATE TABLE IF NOT EXISTS LockerAllGyms
(
 LockerId    int NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 GymId       integer NOT NULL,
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_LockerAllGyms_LockerId_PkLockerInGymLockerId2805 PRIMARY KEY ( LockerId ),
 CONSTRAINT Fk2819 FOREIGN KEY ( GymId ) REFERENCES Gym ( GymId )
);

CREATE TABLE IF NOT EXISTS FactResellerPredictions
(
 SalesOrderNumber      varchar(20) NOT NULL,
 CarrierTrackingNumber varchar(25),
 SalesOrderLineNumber  number(38,0) NOT NULL,
 RevisionNumber        number(38,0),
 OrderQuantity         number(38,0),
 UnitPrice             number(38,0),
 ExtendedAmount        number(38,0),
 UnitPriceDiscountPct  float,
 DiscountAmount        float,
 EtlId                 date NOT NULL COMMENT 'hello desc', 
 EtlFilename           varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 MixeCaSe              integer NOT NULL,
 NewCol                int NOT NULL
);

CREATE TABLE IF NOT EXISTS DimProdCat
(
 CategoryId      integer NOT NULL,
 EtlId           date NOT NULL COMMENT 'hello desc', 
 OrganizationKey number(38,0) NOT NULL,
 CalendarYear    number(38,0) NOT NULL,
 AccountKey      number(38,0) NOT NULL,
 EtlFilename     varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_DimProdCat_CategoryId_3308 PRIMARY KEY ( CategoryId )
);

CREATE TABLE IF NOT EXISTS DimPort
(
 ShipId      varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol       NOT NULL,
 CONSTRAINT PK_DimPort_ShipId_2523 PRIMARY KEY ( ShipId ),
 CONSTRAINT Fk2520 FOREIGN KEY ( ShipId ) REFERENCES DimShip ( ShipId )
);

CREATE TABLE IF NOT EXISTS Edw.DimCustomerCopy1
(
 CustomerKey          number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1 COMMENT 'Customer Identifier',
 GeographyKey         number(38,0) COMMENT 'Geographic informatio',
 CustomerAlternateKey varchar(15) NOT NULL COMMENT 'Alternate Key',
 Title                varchar(8) COMMENT 'Title of the Customer',
 FirstName            varchar(50),
 MiddleName           varchar(50),
 LastName             varchar(50),
 NameStyle            varchar(5) COMMENT 'First or last name',
 BirthDate            date,
 MaritalStatus        varchar(1),
 Suffix               varchar(10),
 Gender               varchar(1),
 Emailaddress         varchar(50),
 YearlyIncome         number(38,0),
 TotalChildren        number(38,0),
 NumberChildrenAtHome number(38,0) COMMENT 'hopefully none',
 EnglishEducation     varchar(40),
 SpanishEducation     varchar(40),
 FrenchEducation      varchar(40),
 EnglishOccupation    varchar(100),
 SpanishOccupation    varchar(100),
 FrenchOccupation     varchar(100),
 HouseOwnerFlag       varchar(1),
 NumberCarsOwned      number(38,0),
 AddressLine          varchar(120),
 AddressLine2         varchar(120),
 Phone                varchar(20),
 DateFirstPurchase    date,
 CommuteDistance      varchar(15),
 CONSTRAINT PK_DimCustomerCopy1_CustomerKey_PkDimCustomerCustomerKeyPkDimCustomer PRIMARY KEY ( CustomerKey ),
 CONSTRAINT FkDimCustomer401Copy1 FOREIGN KEY ( GeographyKey ) REFERENCES Edw.DimGeographyCopy1 ( GeographyKey )
)
COMMENT = 'Dimension for Customer Data';

CREATE TABLE IF NOT EXISTS DimClientHist
(
 ValidFrom   date NOT NULL,
 ValidTo     date NOT NULL,
 ClientId    varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ClientName  varchar NOT NULL,
 NewCol      integer NOT NULL,
 Test        integer NOT NULL,
 NewCol1      NOT NULL,
 CONSTRAINT PK_DimClientHist_ClientId_ValidFrom_ValidTo_1807 PRIMARY KEY ( ValidFrom, ValidTo, ClientId ),
 CONSTRAINT Fk3540 FOREIGN KEY ( ClientId ) REFERENCES FctClientSales ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS DimAccount
(
 AccountKey                    number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1 COMMENT 'Unique Identifier of the Account data from Salesforce',
 ParentPk                      varchar NOT NULL,
 ParentAccountKey              number(38,0) NOT NULL COMMENT 'Identifier of parent Account',
 AccountCodeAlternateKey       number(38,0) COMMENT 'from legacy system',
 ParentAccountCodeAlternateKey number(38,0),
 AccountDescription            varchar(500) COMMENT 'new comment',
 AccountType                   boolean COMMENT 'type 1 2 or 3',
 Operator                      varchar(500) COMMENT 'whatever an operator is',
 CustomMembers                 varchar(300),
 ValueType                     varchar(50) COMMENT 'defined by Bob',
 Amount                        float NOT NULL,
 CustomMemberOptions           varchar(200),
 NewCol                        integer NOT NULL,
 CONSTRAINT PK_DimAccount_AccountKey_ParentPk_PkDimAccount PRIMARY KEY ( AccountKey, ParentPk ),
 CONSTRAINT Fk3351 FOREIGN KEY ( ParentPk ) REFERENCES Table3348 ( ParentPk )
)
COMMENT = 'Holds all Account information';

CREATE TABLE IF NOT EXISTS Table3268
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CreatedDate timestamp_ntz(9) NOT NULL,
 UpdatedDate timestamp_ntz(9) NOT NULL,
 UpdatedBy   varchar(50) NOT NULL,
 ScenarioKey number(38,0) NOT NULL COMMENT 'Scenario Identifier',
 ParentPk    varchar(50) NOT NULL,
 CONSTRAINT Fk3271 FOREIGN KEY ( ScenarioKey, ParentPk ) REFERENCES Edw.DimScenario ( ScenarioKey, ParentPk )
);

CREATE TABLE IF NOT EXISTS Table2537
(
 EtlId1      date NOT NULL COMMENT 'hello desc',
 NewPk       varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table2537_EtlId1_NewPk_PkTable2537EtlId12543 PRIMARY KEY ( EtlId1, NewPk ),
 CONSTRAINT Fk2540 FOREIGN KEY ( EtlId1, NewPk ) REFERENCES Table2476 ( EtlId, NewPk )
);

CREATE TABLE IF NOT EXISTS Table2249
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 PrimaryPk   integer NOT NULL,
 CONSTRAINT Fk2252 FOREIGN KEY ( PrimaryPk ) REFERENCES Table1828Copy1 ( PrimaryPk )
);

CREATE TABLE IF NOT EXISTS Member
(
 MemberId    int NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 PassId      varchar(50) NOT NULL,
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Member_MemberId_2724 PRIMARY KEY ( MemberId ),
 CONSTRAINT Fk2796 FOREIGN KEY ( PassId ) REFERENCES GymPass ( PassId )
);

CREATE TABLE IF NOT EXISTS GymPass
(
 PassId      varchar(50) NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 MemberId    int NOT NULL,
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_GymPass_PassId_2737 PRIMARY KEY ( PassId ),
 CONSTRAINT Fk2793 FOREIGN KEY ( MemberId ) REFERENCES Member ( MemberId )
);

CREATE TABLE IF NOT EXISTS GymMembers
(
 MemberId    int NOT NULL,
 GymId       integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_GymMembers_GymId_MemberId_PkGymMembersGymIdMemberId2729 PRIMARY KEY ( MemberId, GymId ),
 CONSTRAINT Fk2730 FOREIGN KEY ( MemberId ) REFERENCES Member ( MemberId ),
 CONSTRAINT Fk2765 FOREIGN KEY ( GymId ) REFERENCES Gym ( GymId )
);

CREATE TABLE IF NOT EXISTS Edw.ChildDemo
(
 ScenarioKey number(38,0) NOT NULL COMMENT 'Scenario Identifier',
 ParentPk    varchar(50) NOT NULL,
 CreatedBy   varchar(50) NOT NULL,
 CreatedDate timestamp_ntz(9) NOT NULL,
 UpdatedDate timestamp_ntz(9) NOT NULL,
 UpdatedBy   varchar(50) NOT NULL,
 CONSTRAINT PK_ChildDemo_ParentPk_ScenarioKey_PkChildDemoScenarioKeyPk664 PRIMARY KEY ( ScenarioKey, ParentPk ),
 CONSTRAINT Fk661 FOREIGN KEY ( ScenarioKey, ParentPk ) REFERENCES Edw.DimScenario ( ScenarioKey, ParentPk )
);

DROP VIEW IF EXISTS EDW.DIM_PRODUCT_CAT_SUBCAT_V;

CREATE VIEW IF NOT EXISTS v1 (pre_tax_profit comment 'revenue minus cost',
                taxes comment 'assumes taxes are a fixed percentage of profit',
                after_tax_profit)
    as
    select revenue - cost, (revenue - cost) * tax_rate, (revenue - cost) * (1.0 - tax_rate)
    from table1;

CREATE VIEW IF NOT EXISTS ResellerSalesAnalysis_v as (
with emp_store as (
select * from DimEmployee
    inner join DimStore on 
    DimEmployee.StoreId = DimStore.StoreId
)
, Sales_dtl as (
select * from FactResellerSales 
inner join emp_store on
FactResellerSales.EmployeeKey = emp_store.EmployeeKey
)
, final as (
select 
SaleSkey,
SizeCategory as StoreSizeCategory,
Title as EmployeeTitle,
SalesOrderNumber,
CarrierTrackingNumber,
SalesOrderLineNumber,
RevisionNumber,
OrderQuantity,
UnitPrice,
ExtendedAmount,
UnitPriceDiscountPct,
DiscountAmount,
ProductStandardCost,
TotalProductCost,
SalesAmount,
CustomerPoNumber
from Sales_dtl
)
select * from final
);

CREATE VIEW IF NOT EXISTS ResellerSalesAnalysis_load

  Comment = 'No Comment Provided'

AS
(
  
  /*
  * yaml source

version: 2
#customer sources# 
sources:

  - name: edw
    database: prod_hbg
    schema: source
    loaded_at_field: etl_timestamp
    freshness:
      warn_after: {count: 2, period: day}
      error_after: {count: 4, period: day}

    tables:

      - name: DimStore   
      - name: DimEmployee
      - name: FactResellerSales
         
        
  
  */
  
  
  
  /*
  *code
  
  with sales as (
    select * from {{ source('edw', 'FactResellerSales') }}
)

, emp as ( 
    select * from {{ source('edw', 'DimEmployee') }}
)

, store as ( 
    select * from {{ source('edw', 'DimStore') }}
)

, emp_store as (

    select * from emp 
    inner join store using(store_id)
) 

, trading as (
select * from sales 
inner join emp_store using (EmployeeKey)
) 

, final as (

select 
SaleSkey,
SizeCategory as StoreSizeCategory,
Title as EmployeeTitle,
SalesOrderNumber,
CarrierTrackingNumber,
SalesOrderLineNumber,
RevisionNumber,
OrderQuantity,
UnitPrice,
ExtendedAmount,
UnitPriceDiscountPct,
DiscountAmount,
ProductStandardCost,
TotalProductCost,
SalesAmount,
CustomerPoNumber 

from trading
)
  
  */
  select 1

);

CREATE VIEW IF NOT EXISTS SQLDBM_DEMO.SFLK_DATA.LOYALTY_V (
	L_LOYALTYKEY,
	L_CUSTKEY,
	L_NAME,
	L_TYPE,
	L_COMMENTS
) as 
with cust as (

    select
        c_custkey,
        c_name,
        c_address,
        c_nationkey,
        c_phone,
        c_acctbal,
        c_mktsegment,
        c_comment
    from SQLDBM_DEMO.SFLK_DATA.CUSTOMER

)

, ord as (

  select 
        o_orderkey,
        o_custkey,
        o_orderstatus,
        o_totalprice,
        o_orderdate,
        o_orderpriority,
        o_clerk,
        o_shippriority,
        o_comment
   from SQLDBM_DEMO.SFLK_DATA.ORDERS
)

, cust_ord as ( 

    select o_custkey, sum(o_totalprice) as o_totalprice from (
            select  o.*, c.*
            from ord o 
            inner join cust c 
            on o.o_custkey = c_custkey
            where true 
            and c_acctbal > 0 --no deadbeats 
            and c_nationkey != 22 
    )
    group by 1
)

, business_logic as (
    select *


    , dense_rank() OVER  ( order by o_totalprice desc ) as cust_level 
--, 1 as cust_level2
  
    , case 
        when   cust_level between 1 and 20 then 'gold'
        when   cust_level between 21 and 100 then 'silver'
        when   cust_level between 101 and 400 then 'bronze'
               end as loyalty_level

    from cust_ord
    where true 

    order by cust_level asc
)  

, early_supporters as (


    select column1 as o_custkey from values (349642), (896215) , (350965) , (404707), (509986)
)


, all_loyalty as (

select
left(loyalty_level, 1 ) ||  '|' || o_custkey as l_loyaltykey
, o_custkey
, loyalty_level
, 'rule-based' as l_type
from business_logic 

union all 

select 
'g|' || o_custkey as l_loyaltykey
, o_custkey
, 'gold' as loyalty_level
, 'supporter' as l_type
from early_supporters
)

, rename as (

select 
  l_loyaltykey
, o_custkey as l_custkey
, loyalty_level as l_name 
, l_type
, '' as l_comments

 from all_loyalty

)

select * from rename 
where true;

CREATE VIEW IF NOT EXISTS EDW.DIM_PRODUCT_CAT_SUBCAT_V2 

  comment = 'Product details with cat and subcat english names. For fwd/rev engineering' 

AS
(
WITH cat_subcat as (
SELECT cat.* , sub."ProductSubcategoryKey" as "SubProductSubcategoryKey", sub."EnglishProductSubcategoryName"  FROM "DimProductCategory" cat
inner join  "DimProductSubcategory" sub
on  cat."ProductCategoryKey" = sub."ProductCategoryKey"
) 
  select prod.* ,
  ProductCategoryKey,         
ProductCategoryAlternateKey,
EnglishProductCategoryName ,
EnglishProductSubcategoryName
  from "Edw"."DimProduct" prod
  left join cat_subcat 
  on prod."ProductSubcategoryKey" = cat_subcat."SubProductSubcategoryKey"
);

CREATE VIEW IF NOT EXISTS ADVENTUREWORKSDW.EDW.DIM_PRODUCT_CAT_SUBCAT_V (
	"ProductKey",
	"ProductAlternateKey",
	"ProductSubcategoryKey",
	"WeightUnitMeasureCode",
	"SizeUnitMeasureCode",
	"EnglishProductName",
	"StandardCost",
	"FinishedGoodsFlag",
	"Color",
	"SafetyStockLevel",
	"ReorderPoint",
	"ListPrice",
	"Size",
	"SizeRange",
	"Weight",
	"DaysToManufacture",
	"ProductLine",
	"DealerPrice",
	"Class",
	"Style",
	"ModelName",
	"EnglishDescription",
	"Status",
	"ProductCategoryKey",
	"ProductCategoryAlternateKey",
	"EnglishProductCategoryName",
	"EnglishProductSubcategoryName"
) COMMENT = 'Product details with cat and subcat english names. For fwd/rev engineering'
 as
(
WITH cat_subcat as (
SELECT cat.* , sub."ProductSubcategoryKey" as "SubProductSubcategoryKey", sub."EnglishProductSubcategoryName"  FROM "DimProductCategory" cat
inner join  "DimProductSubcategory" sub
on  cat."ProductCategoryKey" = sub."ProductCategoryKey"
) 
  select 
 "ProductKey"           
, "ProductAlternateKey"  
, "ProductSubcategoryKey"
, "WeightUnitMeasureCode"
, "SizeUnitMeasureCode"  
, "EnglishProductName"   
, "StandardCost"         
, "FinishedGoodsFlag"    
, "Color"                
, "SafetyStockLevel"     
, "ReorderPoint"         
, "ListPrice"            
, "Size"                 
 ,"SizeRange"            
 ,"Weight"               
 ,"DaysToManufacture"    
 ,"ProductLine"          
 ,"DealerPrice"          
 ,"Class"                
 ,"Style"                
 ,"ModelName"            
 ,"EnglishDescription"   
 ,"Status"                   
,"ProductCategoryKey"         
,"ProductCategoryAlternateKey"
,"EnglishProductCategoryName" 
,"EnglishProductSubcategoryName"
 from "DimProduct" prod
  left join cat_subcat 
  on prod."ProductSubcategoryKey" = cat_subcat."SubProductSubcategoryKey"
);

CREATE VIEW IF NOT EXISTS View745

  Comment = 'No Comment Provided'

AS
(
  select * from EDW.DIM_PRODUCT_CAT_SUBCAT_V2
);

CREATE FUNCTION ADVENTUREWORKSDW.HOTELBNB.VALIDATE_ID("ID" FLOAT)
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
AS '
    try {
        if (ID < 0) {
            throw "ID cannot be negative!";
        } else {
            return "ID validated.";
        }
    } catch (err) {
        return "Error: " + err;
    }
';

CREATE PROCEDURE Procedure3418()
  Returns string 
  Language Javascript
  Comment = 'No Comment Provided'

AS
$$
  // Please type procedure definition 
$$;

CREATE PROCEDURE Procedure3532()
  Returns string 
  Language Javascript
  Comment = 'No Comment Provided'

AS
$$
  // Please type procedure definition 
$$;

CREATE PROCEDURE sp_product_hist_gen()
  Returns string 
  Language Javascript
  Comment = 'No Comment Provided'

AS
$$
  // Please type procedure definition 
$$;

CREATE PROCEDURE ADVENTUREWORKSDW.HOTELBNB.SQL_PROCEDURE()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '
    
    declare
      output_var varchar;
    begin
      output_var := ''some text'';
      return output_var;
    end;
  ';

ALTER TABLE IF EXISTS Edw.DimCustomer
    ADD CONSTRAINT FkDimGeographyDimCustomerFkDimCustomer401 FOREIGN KEY (GeographyKey) REFERENCES Edw.DimGeography (GeographyKey);

ALTER TABLE IF EXISTS Edw.DimReseller
    ADD CONSTRAINT FkDimGeographyDimResellerFkDimReseller411 FOREIGN KEY (GeographyKey) REFERENCES Edw.DimGeography (GeographyKey);

ALTER TABLE IF EXISTS Edw.DimScenario
    ADD CONSTRAINT Fk3276 FOREIGN KEY (ParentPk) REFERENCES Table3264 (ParentPk);

ALTER TABLE IF EXISTS Edw.FactCurrencyRate
    ADD CONSTRAINT FkDimCurrencyFactCurrencyRateFkFactCurrencyRate413 FOREIGN KEY (CurrencyKey) REFERENCES Edw.DimCurrency (CurrencyKey);

ALTER TABLE IF EXISTS Edw.FactCurrencyRate
    ADD CONSTRAINT FkDimDateFactCurrencyRateFkFactCurrencyRate415 FOREIGN KEY (DateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactFinance
    ADD CONSTRAINT FkFactFinance417 FOREIGN KEY (DateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactFinance
    ADD CONSTRAINT FkFactFinance419 FOREIGN KEY (OrganizationKey) REFERENCES Edw.DimOrganization (OrganizationKey);

ALTER TABLE IF EXISTS Edw.FactFinance
    ADD CONSTRAINT FkFactFinance421 FOREIGN KEY (DepartmentGroupKey) REFERENCES Edw.DimDepartmentGroup (DepartmentGroupKey);

ALTER TABLE IF EXISTS Edw.FactFinance
    ADD CONSTRAINT FkFactFinance423 FOREIGN KEY (ScenarioKey, ParentPk) REFERENCES Edw.DimScenario (ScenarioKey, ParentPk);

ALTER TABLE IF EXISTS Edw.FactFinance
    ADD CONSTRAINT FkFactFinance425 FOREIGN KEY (AccountKey, ParentPk1) REFERENCES DimAccount (AccountKey, ParentPk);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimCustomerFactInternetSalesFkFactInternetSales429 FOREIGN KEY (CustomerKey) REFERENCES Edw.DimCustomer (CustomerKey);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimPromotionFactInternetSalesFkFactInternetSales431 FOREIGN KEY (PromotionKey) REFERENCES Edw.DimPromotion (PromotionKey);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimCurrencyFactInternetSalesFkFactInternetSales433 FOREIGN KEY (CurrencyKey) REFERENCES Edw.DimCurrency (CurrencyKey);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimSalesTerritoryFactInternetSalesFkFactInternetSales435 FOREIGN KEY (SalesTerritoryKey, SalesTerritoryGroup) REFERENCES Edw.DimSalesTerritory (SalesTerritoryKey, SalesTerritoryGroup);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimDateFactInternetSalesFkFactInternetSales437 FOREIGN KEY (OrderDateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimDateFactInternetSalesFkFactInternetSales439 FOREIGN KEY (DueDateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkDimDateFactInternetSalesFkFactInternetSales441 FOREIGN KEY (ShipDateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ADD CONSTRAINT FkTable548FactInternetSalesFk552FactInternetSales552 FOREIGN KEY (NewPk) REFERENCES Table548 (NewPk);

ALTER TABLE IF EXISTS Edw.FactSalesQuota
    ADD CONSTRAINT FkDimDateFactSalesQuotaFkFactSalesQuota463 FOREIGN KEY (DateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactSurveyResponse
    ADD CONSTRAINT FkDimDateFactSurveyResponseFkFactSurveyResponse465 FOREIGN KEY (DateKey) REFERENCES Edw.DimDate (DateKey);

ALTER TABLE IF EXISTS Edw.FactSurveyResponse
    ADD CONSTRAINT FkDimProductCategoryFactSurveyResponseFkFactSurveyResponse467 FOREIGN KEY (ProductCategoryKey) REFERENCES Edw.DimProductCategory (ProductCategoryKey);

ALTER TABLE IF EXISTS Edw.NewFactCurrencyRate
    ADD CONSTRAINT FkDimCurrencyNewFactCurrencyRateFkNewFactCurrencyRate469 FOREIGN KEY (CurrencyKey) REFERENCES Edw.DimCurrency (CurrencyKey);

ALTER TABLE IF EXISTS Edw.NewFactCurrencyRate
    ADD CONSTRAINT FkDimDateNewFactCurrencyRateFkNewFactCurrencyRate471 FOREIGN KEY (DateKey) REFERENCES Edw.DimDate (DateKey);