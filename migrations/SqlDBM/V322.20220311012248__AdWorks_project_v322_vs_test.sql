-- **************************** SqlDBM: Snowflake ***************************
-- * Generated by SqlDBM: AdWorks project, v322 vs test by serge@sqldbm.com *

ALTER TABLE IF EXISTS EDW.DimCustomer
    DROP CONSTRAINT FK_DimCustomer_401;

ALTER TABLE IF EXISTS EDW.DimEmployee
    DROP CONSTRAINT FK_DimEmployee_403;

ALTER TABLE IF EXISTS EDW.DimEmployee
    DROP CONSTRAINT FK_DimEmployee_405;

ALTER TABLE IF EXISTS EDW.DimProduct
    DROP CONSTRAINT FK_DimProduct_407;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    DROP CONSTRAINT FK_DimProductSubcategory_409;

ALTER TABLE IF EXISTS EDW.DimReseller
    DROP CONSTRAINT FK_DimReseller_411;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    DROP CONSTRAINT FK_FactCurrencyRate_413;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    DROP CONSTRAINT FK_FactCurrencyRate_415;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_417;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_419;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_421;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_423;

ALTER TABLE IF EXISTS EDW.FactFinance
    DROP CONSTRAINT FK_FactFinance_425;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_427;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_429;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_431;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_433;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_435;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_437;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_439;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP CONSTRAINT FK_FactInternetSales_441;

ALTER TABLE IF EXISTS EDW.FactProductInventory
    DROP CONSTRAINT FK_FactProductInventory_443;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_445;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_447;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_449;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_451;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_453;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_455;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_457;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_459;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP CONSTRAINT FK_FactResellerSales_461;

ALTER TABLE IF EXISTS EDW.FactSalesQuota
    DROP CONSTRAINT FK_FactSalesQuota_463;

ALTER TABLE IF EXISTS EDW.FactSurveyResponse
    DROP CONSTRAINT FK_FactSurveyResponse_465;

ALTER TABLE IF EXISTS EDW.FactSurveyResponse
    DROP CONSTRAINT FK_FactSurveyResponse_467;

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    DROP CONSTRAINT FK_NewFactCurrencyRate_469;

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    DROP CONSTRAINT FK_NewFactCurrencyRate_471;

ALTER TABLE IF EXISTS EDW.DimAccount
    DROP CONSTRAINT PK_DimAccount;

ALTER TABLE IF EXISTS EDW.DimCurrency
    DROP CONSTRAINT PK_DimCurrency;

ALTER TABLE IF EXISTS EDW.DimCustomer
    DROP CONSTRAINT PK_DimCustomer;

ALTER TABLE IF EXISTS EDW.DimDate
    DROP CONSTRAINT PK_DimDate;

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    DROP CONSTRAINT PK_DimDepartmentGroup;

ALTER TABLE IF EXISTS EDW.DimEmployee
    DROP CONSTRAINT PK_DimEmployee;

ALTER TABLE IF EXISTS EDW.DimGeography
    DROP CONSTRAINT PK_DimGeography;

ALTER TABLE IF EXISTS EDW.DimOrganization
    DROP CONSTRAINT PK_DimOrganization;

ALTER TABLE IF EXISTS EDW.DimProduct
    DROP CONSTRAINT PK_DimProduct;

ALTER TABLE IF EXISTS EDW.DimProductCategory
    DROP CONSTRAINT PK_DimProductCategory;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    DROP CONSTRAINT PK_DimProductSubcategory;

ALTER TABLE IF EXISTS EDW.DimPromotion
    DROP CONSTRAINT PK_DimPromotion;

ALTER TABLE IF EXISTS EDW.DimReseller
    DROP CONSTRAINT PK_DimReseller;

ALTER TABLE IF EXISTS EDW.DimSalesTerritory
    DROP CONSTRAINT PK_DimSalesTerritory;

ALTER TABLE IF EXISTS EDW.DimScenario
    DROP CONSTRAINT PK_DimScenario;

CREATE SCHEMA IF NOT EXISTS AdventureworksdwEdw;

CREATE SCHEMA IF NOT EXISTS Hotelbnb;

DROP SCHEMA IF EXISTS "ADVENTUREWORKSDW.EDW";

CREATE FILE FORMAT IF NOT EXISTS AdventureworksdwEdwFileformat431
    TYPE = JSON;

CREATE FILE FORMAT IF NOT EXISTS AdventureworksdwHotelbnbCsvWHeader
    TYPE = CSV
    SKIP_HEADER = 1
    ESCAPE = '|'
    ESCAPE_UNENCLOSED_FIELD = '|'
    FIELD_OPTIONALLY_ENCLOSED_BY = '\"';

DROP FILE FORMAT IF EXISTS "ADVENTUREWORKSDW.EDW.FILEFORMAT_431";

CREATE SEQUENCE IF NOT EXISTS EDW.Seq_Demo123
START WITH 1
INCREMENT BY 1;

ALTER TABLE IF EXISTS EDW.DimAccount
    ALTER COLUMN AccountCodeAlternateKey COMMENT 'some info on alternate key';

ALTER TABLE IF EXISTS EDW.DimAccount
    ALTER COLUMN ParentAccountCodeAlternateKey COMMENT 'Client team maintains this, see Bob';

ALTER TABLE IF EXISTS EDW.DimAccount
    ALTER COLUMN AccountType COMMENT 'Checking or savings';

ALTER TABLE IF EXISTS EDW.DimAccount
    ALTER COLUMN Operator COMMENT 'Bank or online assistant';

ALTER TABLE IF EXISTS EDW.DimAccount
    ADD COLUMN NewCool int NOT NULL;

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN NameStyle COMMENT 'First or last name';

ALTER TABLE IF EXISTS EDW.DimCustomer
    ALTER COLUMN NumberChildrenAtHome COMMENT 'hopefully none';

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ALTER COLUMN DepartmentGroupKey COMMENT 'Org hierarchy from salesforce';

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ALTER COLUMN ParentDepartmentGroupKey SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ALTER COLUMN DepartmentGroupName SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimEmployee
    UNSET COMMENT;

ALTER TABLE IF EXISTS EDW.DimEmployee
    DROP COLUMN EmployeeKey;

ALTER TABLE IF EXISTS EDW.DimEmployee
    ADD COLUMN EmpKey number(38,0) AUTOINCREMENT (1, 1) NOT NULL;

ALTER TABLE IF EXISTS EDW.DimOrganization
    ALTER COLUMN OrganizationKey COMMENT 'org key from HR , format xyz_nnnnn';

ALTER TABLE IF EXISTS EDW.DimOrganization
    ALTER COLUMN ParentOrganizationKey COMMENT 'parent org';

ALTER TABLE IF EXISTS EDW.DimProduct
    ALTER COLUMN ProductKey COMMENT 'from our main CRM tool';

ALTER TABLE IF EXISTS EDW.DimProduct
    ALTER COLUMN ProductAlternateKey COMMENT 'from alternate CRM tool';

ALTER TABLE IF EXISTS EDW.DimProduct
    ALTER COLUMN ReorderPoint COMMENT 'indicator for re purchase deadline';

ALTER TABLE IF EXISTS EDW.DimProduct
    ALTER COLUMN ListPrice COMMENT 'prince on website';

ALTER TABLE IF EXISTS EDW.DimProduct
    ALTER COLUMN DealerPrice COMMENT 'customer price';

ALTER TABLE IF EXISTS EDW.DimProduct
    DROP COLUMN ProductSubcategoryKey;

ALTER TABLE IF EXISTS EDW.DimProduct
    ADD COLUMN NewCol varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.DimProduct
    ADD COLUMN ProductCategoryKey number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    ALTER COLUMN ProductSubcategoryKey COMMENT 'key of subcat';

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    ALTER COLUMN ProductCategoryKey SET NOT NULL;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    DROP COLUMN ProductSubcategoryAlternateKey;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    DROP COLUMN EnglishProductSubcategoryName;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    DROP COLUMN FrenchProductSubcategoryName;

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    ADD COLUMN Lowercase integer NOT NULL;

ALTER TABLE IF EXISTS EDW.DimPromotion
    ADD COLUMN NewCol varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.DimReseller
    ALTER COLUMN NumberEmployees COMMENT 'total emps in reseller location';

ALTER TABLE IF EXISTS EDW.DimSalesTerritory
    ALTER COLUMN SalesTerritoryGroup SET NOT NULL;

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    ADD COLUMN NewCol integer NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN DayNumberOfYear number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN NewCol varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN EnglishDayNameOfWeek varchar(10) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN EnglishMonthName varchar(10) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN CalendarYear number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD COLUMN FiscalQuarter number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ALTER COLUMN UnitPriceDiscountPct DROP NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    DROP COLUMN RevisionNumber;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN RevisionNumberasdf number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewCol integer NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewPk varchar NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewPk integer NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewPk1 varchar NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN NewCol1 bigint NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN Col1747 bigint NOT NULL;

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD COLUMN SalesTerritoryGroup varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactProductInventory
    ALTER COLUMN ProductKey COMMENT 'from our crm tool product section';

ALTER TABLE IF EXISTS EDW.FactProductInventory
    ALTER COLUMN DateKey COMMENT 'data hash md5';

ALTER TABLE IF EXISTS EDW.FactResellerSales
    DROP COLUMN EmployeeKey;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD COLUMN EmpKey number(38,0) NOT NULL;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD COLUMN SaleSkey varchar NOT NULL;

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD COLUMN SalesTerritoryGroup varchar(50) NOT NULL;

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    ADD COLUMN LowerCol integer NOT NULL;

ALTER TABLE IF EXISTS EDW.DimAccount
    ADD CONSTRAINT PK_DimAccount_AccountKey_PkDimAccount PRIMARY KEY (AccountKey);

ALTER TABLE IF EXISTS EDW.DimcUrrency
    ADD CONSTRAINT PK_DimcUrrency_CurrencyKey_PkDimCurrency PRIMARY KEY (CurrencyKey);

ALTER TABLE IF EXISTS EDW.DimCustomer
    ADD CONSTRAINT PK_DimCustomer_CustomerKey_PkDimCustomer PRIMARY KEY (CustomerKey);

ALTER TABLE IF EXISTS EDW.DimDate
    ADD CONSTRAINT PK_DimDate_DateKey_PkDimDate PRIMARY KEY (DateKey);

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ADD CONSTRAINT PK_DimDepartmentGroup_DepartmentGroupKey_PkDimDepartmentGroup PRIMARY KEY (DepartmentGroupKey);

ALTER TABLE IF EXISTS EDW.DimDepartmentGroup
    ADD CONSTRAINT AK_DimDepartmentGroup_Ak1745 UNIQUE (DepartmentGroupName, ParentDepartmentGroupKey);

ALTER TABLE IF EXISTS EDW.DimEmployee
    ADD CONSTRAINT PK_DimEmployee_EmpKey_PkDimEmployee PRIMARY KEY (EmpKey);

ALTER TABLE IF EXISTS EDW.DimGeography
    ADD CONSTRAINT PK_DimGeography_GeographyKey_PkDimGeography PRIMARY KEY (GeographyKey);

ALTER TABLE IF EXISTS EDW.DimOrganization
    ADD CONSTRAINT PK_DimOrganization_OrganizationKey_PkDimOrganization PRIMARY KEY (OrganizationKey);

ALTER TABLE IF EXISTS EDW.DimProduct
    ADD CONSTRAINT PK_DimProduct_ProductKey_PkDimProduct PRIMARY KEY (ProductKey);

ALTER TABLE IF EXISTS EDW.DimProductCategory
    ADD CONSTRAINT PK_DimProductCategory_ProductCategoryKey_PkDimProductCategory PRIMARY KEY (ProductCategoryKey);

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    ADD CONSTRAINT PK_DimProductSubcategory_ProductCategoryKey_PkDimProductSubcategory1894 PRIMARY KEY (ProductCategoryKey);

ALTER TABLE IF EXISTS EDW.DimPromotion
    ADD CONSTRAINT PK_DimPromotion_PromotionKey_PkDimPromotion PRIMARY KEY (PromotionKey);

ALTER TABLE IF EXISTS EDW.DimReseller
    ADD CONSTRAINT PK_DimReseller_ResellerKey_PkDimReseller PRIMARY KEY (ResellerKey);

ALTER TABLE IF EXISTS EDW.DimSalesTerritory
    ADD CONSTRAINT PK_DimSalesTerritory_SalesTerritoryGroup_SalesTerritoryKey_PkDimSalesTerritory PRIMARY KEY (SalesTerritoryKey, SalesTerritoryGroup);

ALTER TABLE IF EXISTS EDW.DimScenario
    ADD CONSTRAINT PK_DimScenario_ScenarioKey_PkDimScenario PRIMARY KEY (ScenarioKey);

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    ADD CONSTRAINT PK_FactCurrencyRate_CurrencyKey_PkFactCurrencyRate1797 PRIMARY KEY (CurrencyKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT PK_FactInternetSales_NewCol_Pk543 PRIMARY KEY (NewCol);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT PK_FactResellerSales_SaleSkey_Pk917 PRIMARY KEY (SaleSkey);

CREATE TABLE IF NOT EXISTS Test
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table954
(
 EtlId       date NOT NULL,
 EtlFilename varchar NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table719
(
 NewTablePk  varchar NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table719_NewTablePk_Pk730 PRIMARY KEY ( NewTablePk )
);

CREATE TABLE IF NOT EXISTS Table548
(
 NewPk varchar NOT NULL,
 CONSTRAINT PK_Table548_NewPk_Pk551 PRIMARY KEY ( NewPk )
);

CREATE TABLE IF NOT EXISTS Table544Copy11
(
 UnitPrice1            number(38,0) NOT NULL,
 ExtendedAmount1       number(38,0) NOT NULL,
 UnitPriceDiscountPct1 float,
 SalesOrderNumber      varchar(20) NOT NULL,
 NewCol123             date NOT NULL
);

CREATE TABLE IF NOT EXISTS Table2167
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2164
(
 EtlId       date NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2160
(

);

CREATE TABLE IF NOT EXISTS Table2091
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2088
(
 EtlId       date NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table2079
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2070
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table2065
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1976
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1937
(
 SomePk       NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Name        varchar(50) NOT NULL,
 CONSTRAINT PK_Table1937_SomePk_1941 PRIMARY KEY ( SomePk )
)
COMMENT = 'future port table';

CREATE TABLE IF NOT EXISTS Table1934
(
 EtlId       date NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table1900
(
 NewCol       NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table1900_NewCol_1904 PRIMARY KEY ( NewCol )
);

CREATE TABLE IF NOT EXISTS Table1858
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

CREATE TABLE IF NOT EXISTS Table1850
(
 ColumnB     integer NOT NULL,
 ColumnA     integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table1850_ColumnB_PkTable18501856 PRIMARY KEY ( ColumnB )
);

CREATE TABLE IF NOT EXISTS Table1825
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1820
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1794
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1791
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS Table1765
(
 EtlId       date NOT NULL,
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded'
);

CREATE TABLE IF NOT EXISTS Table1722
(
 EtlId       date NOT NULL COMMENT 'hello',
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 Lowercase   integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Table1705
(
 EtlId       date NOT NULL,
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 Lowercase   varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS Table1699
(
 EtlId          date NOT NULL COMMENT 'hello',
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded',
 SocialSecurity number(9,0) NOT NULL, 
 Address        varchar 
);

grant access




CREATE TABLE IF NOT EXISTS Table1678
(
 NewPk       integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_Table1678_NewPk_Table1678New PRIMARY KEY ( NewPk )
);

CREATE TABLE IF NOT EXISTS Table1660
(
 EtlId          date NOT NULL COMMENT 'hello desc', 
 EtlFilename    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SocialSecurity number(9,0) NOT NULL,
 Address        varchar,
 Lowercase      integer NOT NULL
);

CREATE TABLE IF NOT EXISTS Table1654
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded' 
);

CREATE TABLE IF NOT EXISTS NewTblCopy1
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 test_col    asdve NOT NULL
);

CREATE TABLE IF NOT EXISTS NewTbl
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol      integer NOT NULL
);

CREATE TABLE IF NOT EXISTS NewDimEmp
(

);

CREATE TABLE IF NOT EXISTS Hotelbnb.Hotels
(
 CityCode varchar(3),
 HotelId  number(38,0)
);

CREATE TABLE IF NOT EXISTS FutureTable
(
 Pk          integer NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_FutureTable_Pk_1819 PRIMARY KEY ( Pk )
);

CREATE TABLE IF NOT EXISTS FctClientSalesCopy1
(
 CliSalesSkey varchar(50) NOT NULL,
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SalesAmount  float NOT NULL,
 ClientId     integer NOT NULL,
 CONSTRAINT PK_FctClientSalesCopy1_CliSalesSkey_PkFctClientSalesCliSalesSkey1759 PRIMARY KEY ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS FctClientSales
(
 CliSalesSkey varchar(50) NOT NULL,
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SalesAmount  float NOT NULL,
 ClientId     integer NOT NULL,
 CONSTRAINT PK_FctClientSales_CliSalesSkey_1759 PRIMARY KEY ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS EDW.FactInternetSalesCopy11
(
 NewCol                integer NOT NULL,
 ProductKey            number(38,0) NOT NULL,
 OrderDateKey          number(38,0) NOT NULL,
 DueDateKey            number(38,0) NOT NULL,
 ShipDateKey           number(38,0) NOT NULL,
 CustomerKey           number(38,0) NOT NULL,
 PromotionKey          number(38,0) NOT NULL,
 CurrencyKey           number(38,0) NOT NULL,
 SalesTerritoryKey     number(38,0) NOT NULL,
 SalesOrderNumber      varchar(20) NOT NULL,
 SalesOrderLineNumber  number(38,0) NOT NULL,
 RevisionNumber        number(38,0) NOT NULL,
 OrderQuantity         number(38,0) NOT NULL,
 UnitPrice             number(38,0) NOT NULL,
 ExtendedAmount        number(38,0) NOT NULL,
 UnitPriceDiscountPct  float,
 DiscountAmount        float NOT NULL,
 ProductStandardCost   number(38,0) NOT NULL,
 TotalProductCost      number(38,0) NOT NULL,
 SalesAmount           number(38,0) NOT NULL,
 TaxAmt                number(38,0) NOT NULL,
 Freight               number(38,0) NOT NULL,
 CarrierTrackingNumber varchar(25),
 CustomerPoNumber      varchar(25),
 NewPk                 varchar NOT NULL,
 CONSTRAINT PK_FactInternetSalesCopy11_NewCol_1448 PRIMARY KEY ( NewCol )
)
COMMENT = 'Fact table to hold Currency Data';

CREATE TABLE IF NOT EXISTS EDW.FactInternetSalesCopy1
(
 NewCol                integer NOT NULL,
 ProductKey            number(38,0) NOT NULL,
 OrderDateKey          number(38,0) NOT NULL,
 DueDateKey            number(38,0) NOT NULL,
 ShipDateKey           number(38,0) NOT NULL,
 CustomerKey           number(38,0) NOT NULL,
 PromotionKey          number(38,0) NOT NULL,
 CurrencyKey           number(38,0) NOT NULL,
 SalesTerritoryKey     number(38,0) NOT NULL,
 SalesOrderNumber      varchar(20) NOT NULL,
 SalesOrderLineNumber  number(38,0) NOT NULL,
 RevisionNumber        number(38,0) NOT NULL,
 OrderQuantity         number(38,0) NOT NULL,
 UnitPrice             number(38,0) NOT NULL,
 ExtendedAmount        number(38,0) NOT NULL,
 UnitPriceDiscountPct  float,
 DiscountAmount        float NOT NULL,
 ProductStandardCost   number(38,0) NOT NULL,
 TotalProductCost      number(38,0) NOT NULL,
 SalesAmount           number(38,0) NOT NULL,
 TaxAmt                number(38,0) NOT NULL,
 Freight               number(38,0) NOT NULL,
 CarrierTrackingNumber varchar(25),
 CustomerPoNumber      varchar(25),
 NewPk                 varchar NOT NULL,
 CONSTRAINT PK_FactInternetSalesCopy1_NewCol_Pk543 PRIMARY KEY ( NewCol )
)
CLUSTER BY ( ProductKey )
COMMENT = 'Fact table to hold Currency Data';

CREATE TABLE IF NOT EXISTS DimStoreCopy1
(
 StoreId      integer NOT NULL DEFAULT EDW.Seq_Demo123.nextval,
 Address      string NOT NULL,
 SizeCategory varchar(1) NOT NULL,
 ParentPk     varchar(50) NOT NULL,
 CONSTRAINT PK_DimStoreCopy1_StoreId_PkDimStoreStoreIdPk853 PRIMARY KEY ( StoreId )
)
COMMENT = 'Store and PoS location';

CREATE TABLE IF NOT EXISTS DimStore
(
 StoreId      integer NOT NULL DEFAULT EDW.Seq_Demo123.nextval,
 Address      string NOT NULL,
 SizeCategory varchar(1) NOT NULL,
 ParentPk     varchar(50) NOT NULL,
 NewCol       varchar(50) NOT NULL,
 C            int NOT NULL,
 CONSTRAINT PK_DimStore_StoreId_Pk853 PRIMARY KEY ( StoreId )
)
COMMENT = 'Store and PoS location';

CREATE TABLE IF NOT EXISTS EDW.DimPromotion_copy_1
(
 PromotionKey             number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1,
 PromotionAlternateKey    number(38,0),
 EnglishPromotionName     varchar(255),
 SpanishPromotionName     varchar(255),
 FrenchPromotionName      varchar(255),
 DiscountPct              float,
 EnglishPromotionType     varchar(50),
 SpanishPromotionType     varchar(50),
 FrenchPromotionType      varchar(50),
 EnglishPromotionCategory varchar(50),
 SpanishPromotionCategory varchar(50),
 FrenchPromotionCategory  varchar(50),
 MinQty                   number(38,0),
 MaxQty                   number(38,0),
 NewCol                   varchar(50) NOT NULL,
 CONSTRAINT PK_DimPromotion_PromotionKey_PkDimPromotion PRIMARY KEY ( PromotionKey )
);

CREATE TABLE IF NOT EXISTS EDW.DimGeography_copy_1
(
 GeographyKey             number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1,
 City                     varchar(30),
 StateProvinceCode        varchar(3),
 StateProvinceName        varchar(50),
 CountryRegionCode        varchar(3),
 EnglishCountryRegionName varchar(50),
 SpanishCountryRegionName varchar(50),
 FrenchCountryRegionName  varchar(50),
 PostalCode               varchar(15),
 SalesTerritoryKey        number(38,0),
 IpAddressLocator         varchar(15),
 CONSTRAINT PK_DimGeography_GeographyKey_PkDimGeography PRIMARY KEY ( GeographyKey )
);

CREATE TABLE IF NOT EXISTS DimEmployee
(
 EmployeeId  integer NOT NULL DEFAULT 5,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CONSTRAINT PK_DimEmployee_EmployeeId_1600 PRIMARY KEY ( EmployeeId )
);

CREATE TABLE IF NOT EXISTS DimClientHistCopy1
(
 ClientId    integer NOT NULL,
 ValidFrom   date NOT NULL,
 ValidTo     date NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ClientName  varchar NOT NULL,
 NewCol      integer NOT NULL,
 Test        integer NOT NULL,
 CONSTRAINT PK_DimClientHistCopy1_ClientId_ValidFrom_ValidTo_PkDimClientHistClientIdValidFromValidTo1807 PRIMARY KEY ( ClientId, ValidFrom, ValidTo ),
 CONSTRAINT AK_DimClientHistCopy1_AkSingleCli UNIQUE ( ClientId )
);

CREATE TABLE IF NOT EXISTS DimClientHist
(
 ClientId    integer NOT NULL,
 ValidFrom   date NOT NULL,
 ValidTo     date NOT NULL,
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ClientName  varchar NOT NULL,
 NewCol      integer NOT NULL,
 Test        integer NOT NULL,
 new_col      NOT NULL,
 CONSTRAINT PK_DimClientHist_ClientId_ValidFrom_ValidTo_1807 PRIMARY KEY ( ClientId, ValidFrom, ValidTo ),
 CONSTRAINT AK_DimClientHist_AkSingleCli UNIQUE ( ClientId )
);

CREATE TABLE IF NOT EXISTS Hotelbnb.Destinations
(
 DestinationId              varchar(3) NOT NULL,
 DestinationName            varchar(1000),
 CityCode                   varchar(3),
 CountryCode                varchar(3),
 CountryName                varchar(1000),
 CommercialFinanceRegion    varchar(1000),
 CommercialFinanceSubregion varchar(1000),
 HotelDestRegion            varchar(1000),
 HotelDestSubregion         varchar(1000),
 HotelDestSubregion2        varchar(1000),
 BtbSoRegion                varchar(1000),
 BtbSoSubregion             varchar(1000),
 CONSTRAINT PK_Destinations_DestinationId_DestinationsPk PRIMARY KEY ( DestinationId )
);

CREATE TABLE IF NOT EXISTS Hotelbnb.Bookings
(
 BookingId    varchar(12),
 HotelId      number(38,0),
 Rn           number(38,0) COMMENT 'room nights',
 CreationDate varchar(10)
);

CREATE TABLE IF NOT EXISTS Table544Copy1
(
 NewCol               integer NOT NULL,
 SalesOrderNumber     varchar(20) NOT NULL,
 UnitPrice            number(38,0) NOT NULL,
 ExtendedAmount       number(38,0) NOT NULL,
 UnitPriceDiscountPct float,
 CONSTRAINT Fk545Copy1 FOREIGN KEY ( NewCol ) REFERENCES EDW.FactInternetSalesCopy1 ( NewCol )
);

CREATE TABLE IF NOT EXISTS Table1943
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 SomePk       NOT NULL,
 CONSTRAINT Fk1946 FOREIGN KEY ( SomePk ) REFERENCES Table1937 ( SomePk )
);

CREATE TABLE IF NOT EXISTS Table1905
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 NewCol       NOT NULL,
 CONSTRAINT Fk1908 FOREIGN KEY ( NewCol ) REFERENCES Table1900 ( NewCol )
);

CREATE TABLE IF NOT EXISTS Table1558Copy1
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 StoreId     integer NOT NULL DEFAULT EDW.Seq_Demo123.nextval,
 CONSTRAINT Fk1561Copy1 FOREIGN KEY ( StoreId ) REFERENCES DimStoreCopy1 ( StoreId )
);

CREATE TABLE IF NOT EXISTS NewChildCopy1
(
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CliSalesSkey varchar(50) NOT NULL,
 CONSTRAINT Fk1802Copy1 FOREIGN KEY ( CliSalesSkey ) REFERENCES FctClientSalesCopy1 ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS NewChild
(
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 CliSalesSkey varchar(50) NOT NULL,
 CONSTRAINT Fk1802 FOREIGN KEY ( CliSalesSkey ) REFERENCES FctClientSales ( CliSalesSkey )
);

CREATE TABLE IF NOT EXISTS EDW.FactInternetSalesCopy11Copy1
(
 ProductKey            number(38,0) NOT NULL,
 OrderDateKey          number(38,0) NOT NULL,
 DueDateKey            number(38,0) NOT NULL,
 ShipDateKey           number(38,0) NOT NULL,
 CustomerKey           number(38,0) NOT NULL,
 PromotionKey          number(38,0) NOT NULL,
 CurrencyKey           number(38,0) NOT NULL,
 SalesTerritoryKey     number(38,0) NOT NULL,
 SalesOrderNumber      varchar(20) NOT NULL,
 SalesOrderLineNumber  number(38,0) NOT NULL,
 RevisionNumber        number(38,0) NOT NULL,
 OrderQuantity         number(38,0) NOT NULL,
 UnitPrice             number(38,0) NOT NULL,
 ExtendedAmount        number(38,0) NOT NULL,
 UnitPriceDiscountPct  float,
 DiscountAmount        float NOT NULL,
 ProductStandardCost   number(38,0) NOT NULL,
 TotalProductCost      number(38,0) NOT NULL,
 SalesAmount           number(38,0) NOT NULL,
 TaxAmt                number(38,0) NOT NULL,
 Freight               number(38,0) NOT NULL,
 CarrierTrackingNumber varchar(25),
 CustomerPoNumber      varchar(25),
 NewPk                 varchar NOT NULL,
 NewTablePk            varchar NOT NULL,
 Col1                  integer NOT NULL,
 Col2                  string NOT NULL,
 NewCol                integer NOT NULL,
 CONSTRAINT PK_FactInternetSalesCopy11Copy1_NewCol_Pk543 PRIMARY KEY ( NewCol ),
 CONSTRAINT Fk722 FOREIGN KEY ( NewTablePk ) REFERENCES Table719 ( NewTablePk )
)
COMMENT = 'Fact table to hold Currency Data';

CREATE TABLE IF NOT EXISTS EDW.DimCustomer_copy_1
(
 CustomerKey          number(38,0) NOT NULL AUTOINCREMENT START 1 INCREMENT 1 COMMENT 'Customer Identifier',
 GeographyKey         number(38,0) COMMENT 'Geographic informatio',
 CustomerAlternateKey varchar(15) NOT NULL COMMENT 'Alternate Key',
 Title                varchar(8) COMMENT 'Title of the Customer',
 FirstName            varchar(50),
 MiddleName           varchar(50),
 LastName             varchar(50),
 NameStyle            varchar(5) COMMENT 'First or last name',
 BirthDate            date,
 MaritalStatus        varchar(1),
 Suffix               varchar(10),
 Gender               varchar(1),
 EmailAddress         varchar(50),
 YearlyIncome         number(38,0),
 TotalChildren        number(38,0),
 NumberChildrenAtHome number(38,0) COMMENT 'hopefully none',
 EnglishEducation     varchar(40),
 SpanishEducation     varchar(40),
 FrenchEducation      varchar(40),
 EnglishOccupation    varchar(100),
 SpanishOccupation    varchar(100),
 FrenchOccupation     varchar(100),
 HouseOwnerFlag       varchar(1),
 NumberCarsOwned      number(38,0),
 AddressLine          varchar(120),
 AddressLine2         varchar(120),
 Phone                varchar(20),
 DateFirstPurchase    date,
 CommuteDistance      varchar(15),
 CONSTRAINT PK_DimCustomer_CustomerKey_PkDimCustomer PRIMARY KEY ( CustomerKey ),
 CONSTRAINT FkDimCustomer401_copy_1 FOREIGN KEY ( GeographyKey ) REFERENCES EDW.DimGeography_copy_1 ( GeographyKey )
)
COMMENT = 'Dimension for Customer Data';

CREATE TABLE IF NOT EXISTS EDW.ChildDemo
(
 ScenarioKey number(38,0) NOT NULL COMMENT 'Scenario Identifier',
 CreatedBy   varchar(50) NOT NULL,
 CreatedDate timestamp_ntz(9) NOT NULL,
 UpdatedDate timestamp_ntz(9) NOT NULL,
 UpdatedBy   varchar(50) NOT NULL,
 CONSTRAINT PK_ChildDemo_ScenarioKey_Pk664 PRIMARY KEY ( ScenarioKey ),
 CONSTRAINT Fk661 FOREIGN KEY ( ScenarioKey ) REFERENCES EDW.DimScenario ( ScenarioKey )
);

CREATE TABLE IF NOT EXISTS Table544Copy11Copy1
(
 NewCol                integer NOT NULL,
 SalesOrderNumber      varchar(20) NOT NULL,
 UnitPrice             number(38,0) NOT NULL,
 UnitPrice1            number(38,0) NOT NULL,
 ExtendedAmount1       number(38,0) NOT NULL,
 UnitPriceDiscountPct1 float,
 ExtendedAmount        number(38,0) NOT NULL,
 UnitPriceDiscountPct  float,
 NewCol123             date NOT NULL,
 CONSTRAINT Fk545Copy11Copy1 FOREIGN KEY ( NewCol ) REFERENCES EDW.FactInternetSalesCopy11Copy1 ( NewCol )
);

CREATE TABLE IF NOT EXISTS Table1828
(
 ProductCategoryKey             number(38,0) NOT NULL,
 EtlId                          date NOT NULL COMMENT 'hello desc', 
 EtlFilename                    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ProductSubcategoryAlternateKey number(38,0),
 EnglishProductSubcategoryName  varchar(50) NOT NULL,
 FrenchProductSubcategoryName   varchar(50) NOT NULL,
 CONSTRAINT PK_Table1828_ProductCategoryKey_PkTable18281897 PRIMARY KEY ( ProductCategoryKey ),
 CONSTRAINT Fk1831 FOREIGN KEY ( ProductCategoryKey ) REFERENCES EDW.DimProductSubcategory ( ProductCategoryKey )
);

CREATE TABLE IF NOT EXISTS Table1716
(
 EtlId       date NOT NULL COMMENT 'hello desc', 
 EtlFilename varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 name         NOT NULL
);

CREATE TABLE IF NOT EXISTS Table1828_copy_1
(
 EtlId                          date NOT NULL COMMENT 'hello desc', 
 EtlFilename                    varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 ProductCategoryKey_1           number(38,0) NOT NULL,
 ProductCategoryKey             number(38,0) NOT NULL,
 ProductSubcategoryAlternateKey number(38,0),
 EnglishProductSubcategoryName  varchar(50) NOT NULL,
 FrenchProductSubcategoryName   varchar(50) NOT NULL,
 CONSTRAINT Fk2196 FOREIGN KEY ( ProductCategoryKey ) REFERENCES Table1828 ( ProductCategoryKey ),
 CONSTRAINT Fk2199 FOREIGN KEY ( ProductCategoryKey_1 ) REFERENCES Table1828 ( ProductCategoryKey )
);

CREATE TABLE IF NOT EXISTS EDW.ResellerSalesAnalysis
(
 SaleSkey              varchar NOT NULL,
 StoreSizeCategory     varchar(1) NOT NULL,
 EmployeeTitle         varchar(50) NOT NULL,
 SalesOrderNumber      varchar(20) NOT NULL,
 CarrierTrackingNumber varchar(25),
 SalesOrderLineNumber  number(38,0) NOT NULL,
 RevisionNumber        number(38,0),
 OrderQuantity         number(38,0),
 UnitPrice             number(38,0),
 ExtendedAmount        number(38,0),
 UnitPriceDiscountPct  float,
 DiscountAmount        float,
 ProductStandardCost   number(38,0),
 TotalProductCost      number(38,0),
 SalesAmount           number(38,0),
 CustomerPoNumber      varchar(25),
 CONSTRAINT PK_ResellerSalesAnalysis_SaleSkey_Pk921 PRIMARY KEY ( SaleSkey ),
 CONSTRAINT Fk918 FOREIGN KEY ( SaleSkey ) REFERENCES EDW.FactResellerSales ( SaleSkey )
)
COMMENT = 'Fact data of Reseller Sales';

DROP VIEW IF EXISTS EDW.DIM_PRODUCT_CAT_SUBCAT_V;

CREATE VIEW IF NOT EXISTS ResellerSalesAnalysis_v as (
with emp_store as (
select * from DimEmployee
    inner join DimStore on 
    DimEmployee.StoreId = DimStore.StoreId
)
, Sales_dtl as (
select * from FactResellerSales 
inner join emp_store on
FactResellerSales.EmployeeKey = emp_store.EmployeeKey
)
, final as (
select 
SaleSkey,
SizeCategory as StoreSizeCategory,
Title as EmployeeTitle,
SalesOrderNumber,
CarrierTrackingNumber,
SalesOrderLineNumber,
RevisionNumber,
OrderQuantity,
UnitPrice,
ExtendedAmount,
UnitPriceDiscountPct,
DiscountAmount,
ProductStandardCost,
TotalProductCost,
SalesAmount,
CustomerPoNumber
from Sales_dtl
)
select * from final
);

CREATE VIEW IF NOT EXISTS ResellerSalesAnalysis_load

  Comment = 'No Comment Provided'

AS
(
  
  /*
  * yaml source

version: 2
#customer sources# 
sources:

  - name: edw
    database: prod_hbg
    schema: source
    loaded_at_field: etl_timestamp
    freshness:
      warn_after: {count: 2, period: day}
      error_after: {count: 4, period: day}

    tables:

      - name: DimStore   
      - name: DimEmployee
      - name: FactResellerSales
         
        
  
  */
  
  
  
  /*
  *code
  
  with sales as (
    select * from {{ source('edw', 'FactResellerSales') }}
)

, emp as ( 
    select * from {{ source('edw', 'DimEmployee') }}
)

, store as ( 
    select * from {{ source('edw', 'DimStore') }}
)

, emp_store as (

    select * from emp 
    inner join store using(store_id)
) 

, trading as (
select * from sales 
inner join emp_store using (EmployeeKey)
) 

, final as (

select 
SaleSkey,
SizeCategory as StoreSizeCategory,
Title as EmployeeTitle,
SalesOrderNumber,
CarrierTrackingNumber,
SalesOrderLineNumber,
RevisionNumber,
OrderQuantity,
UnitPrice,
ExtendedAmount,
UnitPriceDiscountPct,
DiscountAmount,
ProductStandardCost,
TotalProductCost,
SalesAmount,
CustomerPoNumber 

from trading
)
  
  */
  select 1

);

CREATE VIEW IF NOT EXISTS View745

  Comment = 'No Comment Provided'

AS
(
  select * from EDW.DIM_PRODUCT_CAT_SUBCAT_V2
);

CREATE VIEW IF NOT EXISTS EDW.DIM_PRODUCT_CAT_SUBCAT_V2 

  comment = 'Product details with cat and subcat english names. For fwd/rev engineering' 

AS
(
WITH cat_subcat as (
SELECT cat.* , sub."ProductSubcategoryKey" as "SubProductSubcategoryKey", sub."EnglishProductSubcategoryName"  FROM "DimProductCategory" cat
inner join  "DimProductSubcategory" sub
on  cat."ProductCategoryKey" = sub."ProductCategoryKey"
) 
  select 
 "ProductKey"           
, "ProductAlternateKey"  
, "ProductSubcategoryKey"
, "WeightUnitMeasureCode"
, "SizeUnitMeasureCode"  
, "EnglishProductName"   
, "StandardCost"         
, "FinishedGoodsFlag"    
, "Color"                
, "SafetyStockLevel"     
, "ReorderPoint"         
, "ListPrice"            
, "Size"                 
 ,"SizeRange"            
 ,"Weight"               
 ,"DaysToManufacture"    
 ,"ProductLine"          
 ,"DealerPrice"          
 ,"Class"                
 ,"Style"                
 ,"ModelName"            
 ,"EnglishDescription"   
 ,"Status"                   
,"ProductCategoryKey"         
,"ProductCategoryAlternateKey"
,"EnglishProductCategoryName" 
,"EnglishProductSubcategoryName"
 from "DimProduct" prod
  left join cat_subcat 
  on prod."ProductSubcategoryKey" = cat_subcat."SubProductSubcategoryKey"
);

CREATE VIEW IF NOT EXISTS EDW.DIM_PRODUCT_CAT_SUBCAT_V2 

  comment = 'Product details with cat and subcat english names. For fwd/rev engineering' 

AS
(
WITH cat_subcat as (
SELECT cat.* , sub."ProductSubcategoryKey" as "SubProductSubcategoryKey", sub."EnglishProductSubcategoryName"  FROM "DimProductCategory" cat
inner join  "DimProductSubcategory" sub
on  cat."ProductCategoryKey" = sub."ProductCategoryKey"
) 
  select prod.* ,
  ProductCategoryKey,         
ProductCategoryAlternateKey,
EnglishProductCategoryName ,
EnglishProductSubcategoryName
  from "Edw"."DimProduct" prod
  left join cat_subcat 
  on prod."ProductSubcategoryKey" = cat_subcat."SubProductSubcategoryKey"
);

ALTER TABLE IF EXISTS EDW.DimCustomer
    ADD CONSTRAINT FkDimGeographyDimCustomerFkDimCustomer401 FOREIGN KEY (GeographyKey) REFERENCES EDW.DimGeography (GeographyKey);

ALTER TABLE IF EXISTS EDW.DimEmployee
    ADD CONSTRAINT FkDimEmployee403 FOREIGN KEY (ParentEmployeeKey) REFERENCES EDW.DimEmployee (EmpKey);

ALTER TABLE IF EXISTS EDW.DimEmployee
    ADD CONSTRAINT FkDimEmployee405 FOREIGN KEY (SalesTerritoryKey) REFERENCES EDW.DimSalesTerritory (SalesTerritoryKey);

ALTER TABLE IF EXISTS EDW.DimProduct
    ADD CONSTRAINT FkDimProductSubcategoryDimProductFkDimProduct407 FOREIGN KEY (ProductCategoryKey) REFERENCES EDW.DimProductSubcategory (ProductCategoryKey);

ALTER TABLE IF EXISTS EDW.DimProductSubcategory
    ADD CONSTRAINT FkDimProductCategoryDimProductSubcategoryFkDimProductSubcategory409 FOREIGN KEY (ProductCategoryKey) REFERENCES EDW.DimProductCategory (ProductCategoryKey);

ALTER TABLE IF EXISTS EDW.DimReseller
    ADD CONSTRAINT FkDimGeographyDimResellerFkDimReseller411 FOREIGN KEY (GeographyKey) REFERENCES EDW.DimGeography (GeographyKey);

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    ADD CONSTRAINT FkDimCurrencyFactCurrencyRateFkFactCurrencyRate413 FOREIGN KEY (CurrencyKey) REFERENCES EDW.DimcUrrency (CurrencyKey);

ALTER TABLE IF EXISTS EDW.FactCurrencyRate
    ADD CONSTRAINT FkDimDateFactCurrencyRateFkFactCurrencyRate415 FOREIGN KEY (DateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD CONSTRAINT FkFactFinance417 FOREIGN KEY (DateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD CONSTRAINT FkFactFinance419 FOREIGN KEY (OrganizationKey) REFERENCES EDW.DimOrganization (OrganizationKey);

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD CONSTRAINT FkFactFinance421 FOREIGN KEY (DepartmentGroupKey) REFERENCES EDW.DimDepartmentGroup (DepartmentGroupKey);

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD CONSTRAINT FkFactFinance423 FOREIGN KEY (ScenarioKey) REFERENCES EDW.DimScenario (ScenarioKey);

ALTER TABLE IF EXISTS EDW.FactFinance
    ADD CONSTRAINT FkFactFinance425 FOREIGN KEY (AccountKey) REFERENCES EDW.DimAccount (AccountKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimProductFactInternetSalesFkFactInternetSales427 FOREIGN KEY (ProductKey) REFERENCES EDW.DimProduct (ProductKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimCustomerFactInternetSalesFkFactInternetSales429 FOREIGN KEY (CustomerKey) REFERENCES EDW.DimCustomer (CustomerKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimPromotionFactInternetSalesFkFactInternetSales431 FOREIGN KEY (PromotionKey) REFERENCES EDW.DimPromotion (PromotionKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimCurrencyFactInternetSalesFkFactInternetSales433 FOREIGN KEY (CurrencyKey) REFERENCES EDW.DimcUrrency (CurrencyKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimSalesTerritoryFactInternetSalesFkFactInternetSales435 FOREIGN KEY (SalesTerritoryKey, SalesTerritoryGroup) REFERENCES EDW.DimSalesTerritory (SalesTerritoryKey, SalesTerritoryGroup);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimDateFactInternetSalesFkFactInternetSales437 FOREIGN KEY (OrderDateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimDateFactInternetSalesFkFactInternetSales439 FOREIGN KEY (DueDateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkDimDateFactInternetSalesFkFactInternetSales441 FOREIGN KEY (ShipDateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactInternetSales
    ADD CONSTRAINT FkTable548FactInternetSalesFk552FactInternetSales552 FOREIGN KEY (NewPk) REFERENCES Table548 (NewPk);

ALTER TABLE IF EXISTS EDW.FactProductInventory
    ADD CONSTRAINT FkDimDateFactProductInventoryFkFactProductInventory443 FOREIGN KEY (DateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimProductFactResellerSalesFkFactResellerSales445 FOREIGN KEY (ProductKey) REFERENCES EDW.DimProduct (ProductKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimResellerFactResellerSalesFkFactResellerSales447 FOREIGN KEY (ResellerKey) REFERENCES EDW.DimReseller (ResellerKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimEmployeeFactResellerSalesFkFactResellerSales449 FOREIGN KEY (EmpKey) REFERENCES EDW.DimEmployee (EmpKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimPromotionFactResellerSalesFkFactResellerSales451 FOREIGN KEY (PromotionKey) REFERENCES EDW.DimPromotion (PromotionKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimCurrencyFactResellerSalesFkFactResellerSales453 FOREIGN KEY (CurrencyKey) REFERENCES EDW.DimcUrrency (CurrencyKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimSalesTerritoryFactResellerSalesFkFactResellerSales455 FOREIGN KEY (SalesTerritoryKey, SalesTerritoryGroup) REFERENCES EDW.DimSalesTerritory (SalesTerritoryKey, SalesTerritoryGroup);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimDateFactResellerSalesFkFactResellerSales457 FOREIGN KEY (OrderDateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimDateFactResellerSalesFkFactResellerSales459 FOREIGN KEY (DueDateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactResellerSales
    ADD CONSTRAINT FkDimDateFactResellerSalesFkFactResellerSales461 FOREIGN KEY (ShipDateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactSalesQuota
    ADD CONSTRAINT FkDimDateFactSalesQuotaFkFactSalesQuota463 FOREIGN KEY (DateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactSurveyResponse
    ADD CONSTRAINT FkDimDateFactSurveyResponseFkFactSurveyResponse465 FOREIGN KEY (DateKey) REFERENCES EDW.DimDate (DateKey);

ALTER TABLE IF EXISTS EDW.FactSurveyResponse
    ADD CONSTRAINT FkDimProductCategoryFactSurveyResponseFkFactSurveyResponse467 FOREIGN KEY (ProductCategoryKey) REFERENCES EDW.DimProductCategory (ProductCategoryKey);

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    ADD CONSTRAINT FkDimCurrencyNewFactCurrencyRateFkNewFactCurrencyRate469 FOREIGN KEY (CurrencyKey) REFERENCES EDW.DimcUrrency (CurrencyKey);

ALTER TABLE IF EXISTS EDW.NewFactCurrencyRate
    ADD CONSTRAINT FkDimDateNewFactCurrencyRateFkNewFactCurrencyRate471 FOREIGN KEY (DateKey) REFERENCES EDW.DimDate (DateKey);