-- **************************** SqlDBM: Snowflake ***************************
-- * Generated by SqlDBM: AdWorks project, v583 vs v561 by serge@sqldbm.com *

ALTER TABLE IF EXISTS DimClientHist
    DROP CONSTRAINT PK_DimClientHist_ClientId_ValidFrom_ValidTo_1807;

ALTER TABLE IF EXISTS DimClientHist
    DROP CONSTRAINT AK_DimClientHist_AkSingleCli;

ALTER TABLE IF EXISTS Edw.DimCustomer
    ALTER COLUMN FirstName COMMENT 'english format';

ALTER TABLE IF EXISTS Edw.DimCustomer
    ALTER COLUMN CommuteDistance COMMENT 'in kilometers';

ALTER TABLE IF EXISTS Edw.DimGeography
    ALTER COLUMN StateProvinceCode COMMENT 'iso state code';

-- Attention! Cannot change column data type.

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ALTER COLUMN NewPk SET DATA TYPE integer;

-- Attention! Cannot change column data type.

ALTER TABLE IF EXISTS Edw.FactInternetSales
    ALTER COLUMN NewPk SET DATA TYPE varchar;

-- Attention! Cannot change column data type.

ALTER TABLE IF EXISTS DimClientHist
    ALTER COLUMN ClientId SET DATA TYPE varchar(50);

ALTER TABLE IF EXISTS DimClientHist
    ADD CONSTRAINT PK_DimClientHist_ClientId_ValidFrom_ValidTo_1807 PRIMARY KEY (ValidFrom, ValidTo, ClientId);

CREATE TABLE IF NOT EXISTS Table3534
(
 EtlId        date NOT NULL COMMENT 'hello desc', 
 EtlFilename  varchar(50) NOT NULL COMMENT 'source file or table from where the target is loaded', 
 Fsdgsg       varchar(50) NOT NULL,
 TestRightNow  NOT NULL,
 NewCol       varchar NOT NULL
);

DROP VIEW IF EXISTS LOYALTY_V;

DROP VIEW IF EXISTS Edw.DIM_PRODUCT_CAT_SUBCAT_V;

CREATE VIEW IF NOT EXISTS SQLDBM_DEMO.SFLK_DATA.LOYALTY_V (
	L_LOYALTYKEY,
	L_CUSTKEY,
	L_NAME,
	L_TYPE,
	L_COMMENTS
) as 
with cust as (

    select
        c_custkey,
        c_name,
        c_address,
        c_nationkey,
        c_phone,
        c_acctbal,
        c_mktsegment,
        c_comment
    from SQLDBM_DEMO.SFLK_DATA.CUSTOMER

)

, ord as (

  select 
        o_orderkey,
        o_custkey,
        o_orderstatus,
        o_totalprice,
        o_orderdate,
        o_orderpriority,
        o_clerk,
        o_shippriority,
        o_comment
   from SQLDBM_DEMO.SFLK_DATA.ORDERS
)

, cust_ord as ( 

    select o_custkey, sum(o_totalprice) as o_totalprice from (
            select  o.*, c.*
            from ord o 
            inner join cust c 
            on o.o_custkey = c_custkey
            where true 
            and c_acctbal > 0 --no deadbeats 
            and c_nationkey != 22 
    )
    group by 1
)

, business_logic as (
    select *


    , dense_rank() OVER  ( order by o_totalprice desc ) as cust_level 
--, 1 as cust_level2
  
    , case 
        when   cust_level between 1 and 20 then 'gold'
        when   cust_level between 21 and 100 then 'silver'
        when   cust_level between 101 and 400 then 'bronze'
               end as loyalty_level

    from cust_ord
    where true 

    order by cust_level asc
)  

, early_supporters as (


    select column1 as o_custkey from values (349642), (896215) , (350965) , (404707), (509986)
)


, all_loyalty as (

select
left(loyalty_level, 1 ) ||  '|' || o_custkey as l_loyaltykey
, o_custkey
, loyalty_level
, 'rule-based' as l_type
from business_logic 

union all 

select 
'g|' || o_custkey as l_loyaltykey
, o_custkey
, 'gold' as loyalty_level
, 'supporter' as l_type
from early_supporters
)

, rename as (

select 
  l_loyaltykey
, o_custkey as l_custkey
, loyalty_level as l_name 
, l_type
, '' as l_comments

 from all_loyalty

)

select * from rename 
where true;

CREATE VIEW IF NOT EXISTS ADVENTUREWORKSDW.EDW.DIM_PRODUCT_CAT_SUBCAT_V (
	"ProductKey",
	"ProductAlternateKey",
	"ProductSubcategoryKey",
	"WeightUnitMeasureCode",
	"SizeUnitMeasureCode",
	"EnglishProductName",
	"StandardCost",
	"FinishedGoodsFlag",
	"Color",
	"SafetyStockLevel",
	"ReorderPoint",
	"ListPrice",
	"Size",
	"SizeRange",
	"Weight",
	"DaysToManufacture",
	"ProductLine",
	"DealerPrice",
	"Class",
	"Style",
	"ModelName",
	"EnglishDescription",
	"Status",
	"ProductCategoryKey",
	"ProductCategoryAlternateKey",
	"EnglishProductCategoryName",
	"EnglishProductSubcategoryName"
) COMMENT = 'Product details with cat and subcat english names. For fwd/rev engineering'
 as
(
WITH cat_subcat as (
SELECT cat.* , sub."ProductSubcategoryKey" as "SubProductSubcategoryKey", sub."EnglishProductSubcategoryName"  FROM "DimProductCategory" cat
inner join  "DimProductSubcategory" sub
on  cat."ProductCategoryKey" = sub."ProductCategoryKey"
) 
  select 
 "ProductKey"           
, "ProductAlternateKey"  
, "ProductSubcategoryKey"
, "WeightUnitMeasureCode"
, "SizeUnitMeasureCode"  
, "EnglishProductName"   
, "StandardCost"         
, "FinishedGoodsFlag"    
, "Color"                
, "SafetyStockLevel"     
, "ReorderPoint"         
, "ListPrice"            
, "Size"                 
 ,"SizeRange"            
 ,"Weight"               
 ,"DaysToManufacture"    
 ,"ProductLine"          
 ,"DealerPrice"          
 ,"Class"                
 ,"Style"                
 ,"ModelName"            
 ,"EnglishDescription"   
 ,"Status"                   
,"ProductCategoryKey"         
,"ProductCategoryAlternateKey"
,"EnglishProductCategoryName" 
,"EnglishProductSubcategoryName"
 from "DimProduct" prod
  left join cat_subcat 
  on prod."ProductSubcategoryKey" = cat_subcat."SubProductSubcategoryKey"
);

CREATE PROCEDURE Procedure3532()
  Returns string 
  Language Javascript
  Comment = 'No Comment Provided'

AS
$$
  // Please type procedure definition 
$$;

ALTER TABLE IF EXISTS DimClientHist
    ADD CONSTRAINT Fk3542 FOREIGN KEY (ClientId) REFERENCES FctClientSales (CliSalesSkey);